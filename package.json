{
    "name": "cadquery-viewer",
    "displayName": "CadQuery Viewer",
    "description": "An integrated CadQuery viewer",
    "version": "0.30.0",
    "icon": "resources/cq-vscode.png",
    "license": "Apache-2.0",
    "repository": "https://github.com/bernhard-42/vscode-cadquery-viewer",
    "engines": {
        "vscode": "^1.71.0"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "onCommand:cadquery-viewer.cadqueryViewer"
    ],
    "main": "./out/extension.js",
    "contributes": {
        "commands": [
            {
                "command": "cadquery-viewer.cadqueryViewer",
                "title": "CadQuery Viewer: Open viewer"
            },
            {
                "command": "cadquery-viewer.openViewer",
                "title": "CadQuery Viewer: Open viewer (button)",
                "icon": {
                    "light": "resources/open.png",
                    "dark": "resources/open.png"
                }
            },
            {
                "command": "cadquery-viewer.restartIpython",
                "title": "CadQuery Viewer: Restart IPython terminal",
                "icon": {
                    "light": "resources/restart.png",
                    "dark": "resources/restart.png"
                }
            },
            {
                "command": "cadquery-viewer.ipythonRunCell",
                "title": "CadQuery Viewer: Run IPython cell (delimited by '# %%')",
                "icon": {
                    "light": "resources/start.png",
                    "dark": "resources/start.png"
                }
            },
            {
                "command": "cadquery-viewer.installLibrary",
                "title": "CadQuery Viewer: Install library",
                "icon": {
                    "light": "resources/install.png",
                    "dark": "resources/install.png"
                }
            },
            {
                "command": "cadquery-viewer.installPythonModule",
                "title": "CadQuery Viewer: Install cq_vscode library",
                "icon": {
                    "light": "resources/install.png",
                    "dark": "resources/install.png"
                }
            },
            {
                "command": "cadquery-viewer.installIPythonExtension",
                "title": "CadQuery Viewer: Install IPython extension 'HoangKimLai.ipython'",
                "icon": {
                    "light": "resources/install.png",
                    "dark": "resources/install.png"
                }
            },
            {
                "command": "cadquery-viewer.installVscodeSnippets",
                "title": "CadQuery Viewer: Install CAD snippets into <project>/.vscode/"
            },
            {
                "command": "cadquery-viewer.downloadExamples",
                "title": "CadQuery Viewer: Download examples for a specific library",
                "icon": {
                    "light": "resources/install.png",
                    "dark": "resources/install.png"
                }
            },
            {
                "command": "cadquery-viewer.pasteSnippet",
                "title": "CadQuery Viewer: Paste code snippet",
                "icon": {
                    "light": "resources/light/paste.png",
                    "dark": "resources/dark/paste.png"
                }
            },
            {
                "command": "cadquery-viewer.refreshLibraries",
                "title": "CadQuery Viewer: Refresh libraries list",
                "icon": {
                    "light": "resources/light/refresh.svg",
                    "dark": "resources/dark/refresh.svg"
                }
            },
            {
                "command": "cadquery-viewer.preferences",
                "title": "CadQuery Viewer: Open preferences",
                "icon": {
                    "light": "resources/settings.png",
                    "dark": "resources/settings.png"
                }
            }
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "cadqueryHome",
                    "title": "CadQuery",
                    "icon": "resources/cq-vscode.svg"
                }
            ]
        },
        "views": {
            "cadqueryHome": [
                {
                    "id": "cadqueryStatus",
                    "name": "Viewer Manager"
                },
                {
                    "id": "cadquerySetup",
                    "name": "Library Manager"
                }
            ]
        },
        "viewsWelcome": [
            {
                "view": "cadqueryStatus",
                "contents": "In order to use CadQuery viewer, the Python library cq_vscode needs to be installed.\n[Install cq_vscode from pypi](command:cadquery-viewer.installPythonModule)\nFurther libraries can be installed or re-installed in the Library Manager below.\n\nAvailable libraries and their install (and import) commands can be found in the 'CadQuery Viewer' preferences of VS Code.\n[Open CadQuery Viewer Preferences](command:workbench.action.openSettings?%5B%22CadQuery%20Viewer%22%5D)\n"
            }
        ],
        "menus": {
            "view/title": [
                {
                    "command": "cadquery-viewer.refreshLibraries",
                    "when": "view == cadquerySetup",
                    "group": "navigation@1"
                },
                {
                    "command": "cadquery-viewer.preferences",
                    "when": "view == cadqueryStatus",
                    "group": "navigation@1"
                }
            ],
            "view/item/context": [
                {
                    "command": "cadquery-viewer.installLibrary",
                    "when": "view == cadquerySetup && viewItem == library",
                    "group": "inline@0"
                },
                {
                    "command": "cadquery-viewer.installIPythonExtension",
                    "when": "view == cadqueryStatus && viewItem == ipythonExtMissing",
                    "group": "inline@0"
                },
                {
                    "command": "cadquery-viewer.downloadExamples",
                    "when": "view == cadquerySetup && viewItem == examples",
                    "group": "inline@0"
                },
                {
                    "command": "cadquery-viewer.pasteSnippet",
                    "when": "view == cadqueryStatus && viewItem == library",
                    "group": "inline@1"
                },
                {
                    "command": "cadquery-viewer.pasteSnippet",
                    "when": "view == cadqueryStatus && viewItem == status",
                    "group": "inline@1"
                },
                {
                    "command": "cadquery-viewer.pasteSnippet",
                    "when": "view == cadqueryStatus && viewItem == open",
                    "group": "inline@1"
                },
                {
                    "command": "cadquery-viewer.openViewer",
                    "when": "view == cadqueryStatus && viewItem == status",
                    "group": "inline@0"
                },
                {
                    "command": "cadquery-viewer.ipythonRunCell",
                    "when": "view == cadqueryStatus && viewItem == open",
                    "group": "inline@2"
                },
                {
                    "command": "cadquery-viewer.restartIpython",
                    "when": "view == cadqueryStatus && viewItem == open",
                    "group": "inline@0"
                }
            ]
        },
        "keybindings": [
            {
                "command": "cadquery-viewer.cadqueryViewer",
                "key": "ctrl+k v",
                "mac": "cmd+k v",
                "when": "editorTextFocus && editorLangId=='python'"
            }
        ],
        "configuration": {
            "title": "CadQuery Viewer",
            "properties": {
                "CadQueryViewer.treeWidth": {
                    "type": "integer",
                    "default": 240,
                    "description": "CadQuery Viewer navigation tree width",
                    "order": 0
                },
                "CadQueryViewer.dark": {
                    "type": "boolean",
                    "default": false,
                    "description": "Use dark mode",
                    "order": 3
                },
                "CadQueryViewer.orbitControl": {
                    "type": "boolean",
                    "default": false,
                    "description": "Use 'orbit' control mode instead of 'trackball'",
                    "order": 4
                },
                "CadQueryViewer.up": {
                    "type": "string",
                    "default": "Z",
                    "description": "Provides up direction, 'Z', 'Y' or 'L' (legacy)",
                    "order": 5
                },
                "CadQueryViewer.glass": {
                    "type": "boolean",
                    "default": true,
                    "description": "Use glass mode with transparent navigation tree",
                    "order": 1
                },
                "CadQueryViewer.tools": {
                    "type": "boolean",
                    "default": true,
                    "description": "Show toolbar",
                    "order": 2
                },
                "CadQueryViewer.rotateSpeed": {
                    "type": "number",
                    "default": 1,
                    "description": "Rotation speed",
                    "order": 6
                },
                "CadQueryViewer.zoomSpeed": {
                    "type": "number",
                    "default": 1,
                    "description": "Zoom speed",
                    "order": 7
                },
                "CadQueryViewer.panSpeed": {
                    "type": "number",
                    "default": 1,
                    "description": "Pan speed",
                    "order": 8
                },
                "CadQueryViewer.installCommands": {
                    "type": "object",
                    "description": "Shell commands to install Python libraries. The values for placeholders {python}, {conda_env}, {cq_vscode_version} will be replaced accordingly during execution",
                    "default": {
                        "cadquery": {
                            "pip": [
                                "{unset_conda} {python} -m pip install git+https://github.com/cadquery/cadquery.git"
                            ],
                            "conda": [
                                "conda install -y -n {conda_env} -c conda-forge -c cadquery cadquery=master"
                            ],
                            "mamba": [
                                "mamba install -y -n {conda_env} -c conda-forge -c cadquery cadquery=master"
                            ],
                            "poetry": [
                                "poetry add git+https://github.com/cadquery/cadquery.git"
                            ]
                        },
                        "build123d": {
                            "pip": [
                                "{python} -m pip install git+https://github.com/gumyr/build123d.git"
                            ],
                            "poetry": [
                                "poetry add git+https://github.com/gumyr/build123d.git"
                            ]
                        },
                        "cq_vscode": {
                            "pip": [
                                "{python} -m pip install cq_vscode=={cq_vscode_version}"
                            ],
                            "poetry": [
                                "poetry add cq_vscode=={cq_vscode_version}"
                            ]
                        },
                        "ipython": {
                            "pip": [
                                "{python} -m pip install ipython"
                            ],
                            "conda": [
                                "conda install -y -n {conda_env} -c conda-forge ipython"
                            ],
                            "mamba": [
                                "mamba install -y -n {conda_env} -c conda-forge ipython"
                            ],
                            "poetry": [
                                "poetry add ipython"
                            ]
                        }
                    }
                },
                "CadQueryViewer.codeSnippets": {
                    "type": "object",
                    "description": "Python snippets to import the Python libraries",
                    "default": {
                        "cadquery": [
                            "import cadquery as cq"
                        ],
                        "build123d": [
                            "from build123d import *"
                        ],
                        "cq_vscode": [
                            "from cq_vscode import show, show_object, reset_show, set_port, set_defaults, get_defaults"
                        ],
                        "ipython": [
                            "\n# %%\n"
                        ]
                    }
                },
                "CadQueryViewer.dotVscodeSnippets": {
                    "type": "object",
                    "description": "Python snippets to help writing CAD code",
                    "default":{
                        "build123d": {
                            "BuildPart": {
                                "scope": "python",
                                "prefix": ":bd_p",
                                "body": [
                                    "with {prefix}BuildPart() as ${1:partname}:",
                                    "    $0"
                                ]
                            },
                            "BuildSketch": {
                                "scope": "python",
                                "prefix": ":bd_s",
                                "body": [
                                    "with {prefix}BuildSketch() as ${1:sketchname}:",
                                    "    $0"
                                ]
                            },
                            "BuildLine": {
                                "scope": "python",
                                "prefix": ":bd_l",
                                "body": [
                                    "with {prefix}BuildLine() as ${1:linename}:",
                                    "    $0"
                                ]
                            },
                            "Part": {
                                "scope": "python",
                                "prefix": ":bd_bp",
                                "body": [
                                    "with {prefix}BuildPart() as ${1:partname}:",
                                    "    {prefix}${2:class}(${3:params}, align=({prefix}Align.CENTER, {prefix}Align.CENTER, {prefix}Align.CENTER))",
                                    "    $0"
                                ]
                            },
                            "Sketch": {
                                "scope": "python",
                                "prefix": ":bd_bs",
                                "body": [
                                    "with {prefix}BuildSketch() as ${1:sketchname}:",
                                    "    {prefix}${2:class}(${3:params}, align=({prefix}Align.CENTER, {prefix}Align.CENTER))",
                                    "    $0"
                                ]
                            },
                            "Line": {
                                "scope": "python",
                                "prefix": ":bd_bl",
                                "body": [
                                    "with {prefix}BuildLine() as ${1:linename}:",
                                    "    {prefix}${2:class}(${3:params})",
                                    "    $0"
                                ]
                            },
                            "LineChain": {
                                "scope": "python",
                                "prefix": ":bd_lchain",
                                "body": [
                                    "with {prefix}BuildLine() as ${1:linename}:",
                                    "    ${2:l1} = {prefix}Line((${3:start}), (${4:end}))",
                                    "    ${5:l2} = {prefix}Line(${2:l1} @ 0, (${6:end}))",
                                    "    ${7:l3} = {prefix}Line(${5:l2} @ 0, (${8:end}))",
                                    "    $0"
                                ]
                            },
                            "PartSketch": {
                                "scope": "python",
                                "prefix": ":bd_pask",
                                "body": [
                                    "with {prefix}BuildPart() as ${1:partname}:",
                                    "    with {prefix}BuildSketch() as ${2:sketchname}:",
                                    "        {prefix}${3:class}(${4:params}, align=({prefix}Align.CENTER, {prefix}Align.CENTER))",
                                    "        ${1:partname}.edges()",
                                    "    $0"
                                ]
                            },	
                            "SketchLine": {
                                "scope": "python",
                                "prefix": ":bd_skli",
                                "body": [
                                    "with {prefix}BuildSketch() as ${1:sketchname}:",
                                    "    with {prefix}BuildLine() as ${2:linename}:",
                                    "        {prefix}${3:class}(${4:params})",
                                    "    MakeFace()",
                                    "    $0"
                                ]
                            },	
                            "ExtrudeLine": {
                                "scope": "python",
                                "prefix": ":bd_exli",
                                "body": [
                                    "with {prefix}BuildPart() as ${1:partname}:",
                                    "    with {prefix}BuildSketch() as ${2:sketchname}:",
                                    "        with {prefix}BuildLine() as ${3:linename}:",
                                    "            {prefix}${4:class}(${5:params})",
                                    "        {prefix}MakeFace()",
                                    "    {prefix}Extrude(amount=${6:amount})",
                                    "    $0"
                                ]
                            },	
                            "ExtrudeSketch": {
                                "scope": "python",
                                "prefix": ":bd_exsk",
                                "body": [
                                    "with {prefix}BuildPart() as ${1:partname}:",
                                    "    with {prefix}BuildSketch() as ${2:sketchname}:",
                                    "        {prefix}${3:class}(${4:params}, align=({prefix}Align.CENTER, {prefix}Align.CENTER))",
                                    "    {prefix}Extrude(amount=${5:amount})",
                                    "    $0"
                                ]
                            }	
                        }
                    }
                },
                "CadQueryViewer.exampleDownloads": {
                    "type": "object",
                    "description": "Github download path for repository zip archives",
                    "default": {
                        "cadquery": {
                            "zip": "https://github.com/CadQuery/cadquery/archive/refs/heads/master.zip",
                            "example_path": "cadquery-master/examples"
                        },
                        "build123d": {
                            "zip": "https://github.com/gumyr/build123d/archive/refs/heads/dev.zip",
                            "example_path": "build123d-dev/examples"
                        }
                    }
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "yarn run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "pretest": "yarn run compile && yarn run lint",
        "lint": "eslint src --ext ts",
        "test": "node ./out/test/runTest.js"
    },
    "devDependencies": {
        "@types/glob": "^7.2.0",
        "@types/mocha": "^9.1.1",
        "@types/node": "^16.18.12",
        "@types/vscode": "^1.71.0",
        "@typescript-eslint/eslint-plugin": "^5.31.0",
        "@typescript-eslint/parser": "^5.31.0",
        "@vscode/test-electron": "^2.1.5",
        "eslint": "^8.20.0",
        "glob": "^8.0.3",
        "mocha": "^10.0.0",
        "typescript": "^4.7.4"
    },
    "dependencies": {
        "@types/adm-zip": "^0.5.0",
        "@types/follow-redirects": "^1.14.1",
        "adm-zip": "^0.5.10",
        "follow-redirects": "^1.15.2",
        "three-cad-viewer": "^1.7.0",
        "vsce": "^2.11.0"
    }
}
